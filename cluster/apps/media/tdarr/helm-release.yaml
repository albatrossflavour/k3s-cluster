---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tdarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: ingress-nginx
      namespace: networking
  values:
    image:
      # https://hub.docker.com/r/haveagitgat/tdarr_node
      repository: docker.io/haveagitgat/tdarr
      tag: latest
    env:
      TZ: ${TIMEZONE}
      webUIPort: "{{ .Values.service.main.ports.http.port }}"
      serverIP: 0.0.0.0
      serverPort: "{{ .Values.service.main.ports.server.port }}"
      ffmpegPath: ""
      PUID: "${SECURITY_CONTEXT_RUN_AS_USER}"
      PGID: "${SECURITY_CONTEXT_RUN_AS_GROUP}"
    service:
      main:
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
      media:
        enabled: true
        type: nfs
        server: "192.168.1.22"
        path: /volume1/Media
        mountPath: /media
      # Transcode dir
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          nginx.ingress.kubernetes.io/satisfy: "any"
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: material-symbols:switch-video-outline
          hajimari.io/group: "Media"
        hosts:
          - host: &host "{{ .Release.Name }}.lab.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *app
