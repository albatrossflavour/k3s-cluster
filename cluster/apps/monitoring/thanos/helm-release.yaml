---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 11.1.2
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: kube-prometheus-stack
      namespace: monitoring
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true
    query:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      replicaLabel:
        - __replica__
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: &host "thanos-query.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: *host
    queryFrontend:
      enabled: false
    bucketweb:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        hostname: &host "thanos-bucketweb.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: *host
    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 14d
      ingress:
        enabled: true
        hostname: &host "thanos-compactor.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: *host
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 50Gi
    storegateway:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        hostname: &host "thanos-storegateway.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: *host
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 20Gi
    ruler:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring:9093
      clusterName: k3s-cluster
      extraFlags:
        - "--web.prefix-header=X-Forwarded-Prefix"
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      ingress:
        enabled: true
        hostname: &host "thanos-ruler.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: *host
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 20Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
